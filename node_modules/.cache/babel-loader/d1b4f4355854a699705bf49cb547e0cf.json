{"ast":null,"code":"var _jsxFileName = \"/Users/noahscafati/movie_program/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { render } from '@testing-library/react';\nimport MovieRow from './MovieRow.js';\nimport $ from 'jquery';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.performSearch(\"\");\n  }\n\n  performSearch(searchTerm) {\n    console.log(\"Perform Search\");\n    const urlString = \"https://api.themoviedb.org/3/search/movie?api_key=0e11dba550c2721f8769af2eb1eec6b5&query=\" + searchTerm;\n    $.ajax({\n      url: urlString,\n      success: searchResults => {\n        console.log(\"Fetched Data successfully\"); //console.log(searchResults)\n\n        const results = searchResults.results; //console.log(results[0])\n\n        var movieRows = [];\n        results.forEach(movie => {\n          movie.poster_src = \"https://image.tmdb.org/t/p/w188_and_h282_bestv2\" + movie.poster_path;\n          console.log(movie.poster_path);\n          const movieRow = /*#__PURE__*/React.createElement(MovieRow, {\n            key: movie.id,\n            movie: movie,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 30\n            }\n          });\n          movieRows.push(movieRow);\n        });\n        this.setState({\n          rows: movieRows\n        });\n      },\n      error: (xhr, status, err) => {\n        console.error(\"Failed to fetch data\");\n      }\n    });\n  }\n\n  searchChangeHandler(event) {\n    console.log(event.target.value);\n    const boundObject = this;\n    const searchTerm = event.target.value;\n    boundObject.performSearch(searchTerm);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"titleBar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        fontsize: 100\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }, \"Obama's Movie Gallery\"), /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        fontSize: 24,\n        width: \"50%\",\n        paddingTop: \".5%\",\n        paddingBottom: \"1%\"\n      },\n      onChange: this.searchChangeHandler.bind(this),\n      placeholder: \"Enter movie title...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 16\n      }\n    })))), this.state.rows, /*#__PURE__*/React.createElement(\"img\", {\n      width: \"500\",\n      src: \"Obama Final.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/noahscafati/movie_program/src/App.js"],"names":["React","Component","render","MovieRow","$","App","constructor","props","state","performSearch","searchTerm","console","log","urlString","ajax","url","success","searchResults","results","movieRows","forEach","movie","poster_src","poster_path","movieRow","id","push","setState","rows","error","xhr","status","err","searchChangeHandler","event","target","value","boundObject","fontsize","fontSize","width","paddingTop","paddingBottom","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport './App.css';\nimport { render } from '@testing-library/react';\nimport MovieRow from './MovieRow.js'\nimport $ from 'jquery'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {} \n\n\n    this.performSearch(\"\")\n  }\n\n \n    performSearch(searchTerm) {\n      console.log(\"Perform Search\")\n      const urlString = \"https://api.themoviedb.org/3/search/movie?api_key=0e11dba550c2721f8769af2eb1eec6b5&query=\" + searchTerm\n      $.ajax({\n        url: urlString,\n        success: (searchResults) => {\n          console.log(\"Fetched Data successfully\")\n          //console.log(searchResults)\n          const results = searchResults.results\n          //console.log(results[0])\n\n          var movieRows = []\n          \n          \n          results.forEach((movie) => {\n            movie.poster_src = \"https://image.tmdb.org/t/p/w188_and_h282_bestv2\" + movie.poster_path\n            console.log(movie.poster_path)\n            const movieRow = <MovieRow key={movie.id} movie={movie}/>\n            \n            \n            movieRows.push(movieRow)\n          })\n            this.setState({rows:movieRows})\n          \n        },\n        error: (xhr, status, err) => {\n          console.error(\"Failed to fetch data\")\n        }\n      })\n    }\n    \n\n  searchChangeHandler(event) {\n    console.log(event.target.value)\n    const boundObject = this;\n    const searchTerm = event.target.value;\n    boundObject.performSearch(searchTerm)\n\n  }\n\n  render() {\n    return (\n      <div>\n        <table className = \"titleBar\">\n          <tbody>\n            <tr>\n              <h1 style = {{\n                fontsize:100,\n              }}>\n                Obama's Movie Gallery\n              </h1>\n\n              \n               <input style = {{\n          \n          fontSize: 24,\n          width: \"50%\",\n          paddingTop: \".5%\",\n          paddingBottom: \"1%\",\n        \n      }} onChange={this.searchChangeHandler.bind(this)} placeholder = \"Enter movie title...\"/> \n            </tr>\n          </tbody>\n        </table>\n  \n  \n        \n      \n        {this.state.rows}\n     \n      <img width = \"500\" src = \"Obama Final.png\" />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}